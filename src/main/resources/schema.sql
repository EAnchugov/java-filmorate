DROP ALL OBJECTS;

create table IF NOT EXISTS MPA_RATING
(
    MPA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME   varchar(40) unique,
    CONSTRAINT uc_mpa_name UNIQUE (MPA_NAME)
);

create table IF NOT EXISTS GENRES
(
    GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME     varchar(50) unique
);

create table IF NOT EXISTS FILMS
(
    FILM_ID      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         varchar,
    DESCRIPTION  varchar,
    RELEASE_DATE DATE,
    DURATION     integer,
    MPA_ID INTEGER not null references MPA_RATING(MPA_ID) ON DELETE CASCADE
);

create table IF NOT EXISTS USERS
(
    USER_ID  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME     varchar,
    EMAIL    varchar,
    BIRTHDAY DATE,
    LOGIN    varchar
);

create table film_likes(
    USER_ID INTEGER not null references USERS(USER_ID) ON DELETE CASCADE,
    FILM_ID INTEGER not null references FILMS(FILM_ID) ON DELETE CASCADE
);

create table if not exists film_genres(
    GENRE_ID INTEGER not null references GENRES(GENRE_ID) ON DELETE CASCADE,
    FILM_ID INTEGER not null references FILMS(FILM_ID) ON DELETE CASCADE,
    constraint FILM_GENRE_PK primary key (GENRE_ID, FILM_ID)
);


create table IF NOT EXISTS FRIENDS
(
    USER_ID   INTEGER not null references USERS(USER_ID) ON DELETE CASCADE,
    FRIEND_ID INTEGER not null references USERS(USER_ID) ON DELETE CASCADE,
    STATUS    INTEGER
);